CREATE TABLE users (
UserID INT NOT NULL AUTO_INCREMENT,
Username VARCHAR(50) NOT NULL UNIQUE,
Password VARCHAR(255) NOT NULL,
Email VARCHAR(100) NOT NULL UNIQUE,
PRIMARY KEY (UserID)
) ENGINE=InnoDB;

CREATE TABLE users_details (
UserID INT NOT NULL,
FirstName VARCHAR(50),
LastName VARCHAR(50),
Address TEXT,
PhoneNumber VARCHAR(20),
RegistrationDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (UserID),
FOREIGN KEY (UserID) REFERENCES users(UserID)
) ENGINE=InnoDB;

CREATE TABLE roles (
RoleID INT NOT NULL AUTO_INCREMENT,
RoleName VARCHAR(50) NOT NULL UNIQUE,
PRIMARY KEY (RoleID)
) ENGINE=InnoDB;

CREATE TABLE user_roles (
UserID INT NOT NULL,
RoleID INT NOT NULL,
PRIMARY KEY (UserID, RoleID),
FOREIGN KEY (UserID) REFERENCES users(UserID),
FOREIGN KEY (RoleID) REFERENCES roles(RoleID)
) ENGINE=InnoDB;

CREATE TABLE brands (
BrandID INT NOT NULL AUTO_INCREMENT,
BrandName VARCHAR(100) NOT NULL UNIQUE,
PRIMARY KEY (BrandID)
) ENGINE=InnoDB;

CREATE TABLE categories (
CategoryID INT NOT NULL AUTO_INCREMENT,
CategoryName VARCHAR(100) NOT NULL UNIQUE,
PRIMARY KEY (CategoryID)
) ENGINE=InnoDB;

CREATE TABLE products (
ProductID INT NOT NULL AUTO_INCREMENT,
ProductName VARCHAR(255) NOT NULL,
Description TEXT,
Price DECIMAL(10,2) NOT NULL,
StockQuantity INT NOT NULL,
ImageURL VARCHAR(255),
PRIMARY KEY (ProductID)
) ENGINE=InnoDB;

CREATE TABLE product_brand_mapping (
ProductID INT NOT NULL,
BrandID INT NOT NULL,
PRIMARY KEY (ProductID, BrandID),
FOREIGN KEY (ProductID) REFERENCES products(ProductID),
FOREIGN KEY (BrandID) REFERENCES brands(BrandID)
) ENGINE=InnoDB;

CREATE TABLE product_category_mapping (
ProductID INT NOT NULL,
CategoryID INT NOT NULL,
PRIMARY KEY (ProductID, CategoryID),
FOREIGN KEY (ProductID) REFERENCES products(ProductID),
FOREIGN KEY (CategoryID) REFERENCES categories(CategoryID)
) ENGINE=InnoDB;

CREATE TABLE product_price_history (
PriceID INT NOT NULL AUTO_INCREMENT,
ProductID INT NOT NULL,
Price DECIMAL(10,2) NOT NULL,
EffectiveDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (PriceID),
FOREIGN KEY (ProductID) REFERENCES products(ProductID)
) ENGINE=InnoDB;

CREATE TABLE cart (
CartID INT NOT NULL AUTO_INCREMENT,
UserID INT NOT NULL,
CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (CartID),
FOREIGN KEY (UserID) REFERENCES users(UserID)
) ENGINE=InnoDB;

CREATE TABLE cart_items (
CartID INT NOT NULL,
ProductID INT NOT NULL,
Quantity INT NOT NULL,
PRIMARY KEY (CartID, ProductID),
FOREIGN KEY (CartID) REFERENCES cart(CartID),
FOREIGN KEY (ProductID) REFERENCES products(ProductID)
) ENGINE=InnoDB;

CREATE TABLE order_status (
StatusID INT NOT NULL AUTO_INCREMENT,
StatusName VARCHAR(50) NOT NULL UNIQUE,
PRIMARY KEY (StatusID)
) ENGINE=InnoDB;

CREATE TABLE orders (
OrderID INT NOT NULL AUTO_INCREMENT,
UserID INT NOT NULL,
OrderDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
StatusID INT DEFAULT 1,
PRIMARY KEY (OrderID),
FOREIGN KEY (UserID) REFERENCES users(UserID),
FOREIGN KEY (StatusID) REFERENCES order_status(StatusID)
) ENGINE=InnoDB;

CREATE TABLE order_items (
OrderID INT NOT NULL,
ProductID INT NOT NULL,
Quantity INT NOT NULL,
UnitPrice DECIMAL(10,2) NOT NULL,
PRIMARY KEY (OrderID, ProductID),
FOREIGN KEY (OrderID) REFERENCES orders(OrderID),
FOREIGN KEY (ProductID) REFERENCES products(ProductID)
) ENGINE=InnoDB;